{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport os\nimport librosa,librosa.display\nfrom tqdm.notebook import tqdm\nimport warnings\nimport math\nimport time\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom IPython.display import Audio, display\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:11:15.425677Z","iopub.execute_input":"2022-10-17T06:11:15.426089Z","iopub.status.idle":"2022-10-17T06:11:17.407747Z","shell.execute_reply.started":"2022-10-17T06:11:15.426061Z","shell.execute_reply":"2022-10-17T06:11:17.406204Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!apt install git-lfs","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:11:17.410020Z","iopub.execute_input":"2022-10-17T06:11:17.410613Z","iopub.status.idle":"2022-10-17T06:11:23.894593Z","shell.execute_reply.started":"2022-10-17T06:11:17.410572Z","shell.execute_reply":"2022-10-17T06:11:23.893401Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"path='../input/it1244audio/data/0_A_0.wav'\nraw_data,framerate=librosa.load(path)\nraw_data,framerate","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:11:23.896319Z","iopub.execute_input":"2022-10-17T06:11:23.897455Z","iopub.status.idle":"2022-10-17T06:11:25.717290Z","shell.execute_reply.started":"2022-10-17T06:11:23.897409Z","shell.execute_reply":"2022-10-17T06:11:25.716051Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Audio is in 8khz, we are going to use\nhttps://huggingface.co/blog/fine-tune-wav2vec2-english","metadata":{}},{"cell_type":"code","source":"data=pd.DataFrame(columns=['raw_data','duration','digit',\"person\"])\ndir_path='../input/it1244audio/data/'\nfor i in tqdm(os.listdir(dir_path)):\n        raw_data,frame_rate=librosa.load(dir_path+i)\n        duration=librosa.get_duration(raw_data,frame_rate)\n        data.loc[len(data.index)]=[raw_data,duration,i.split('_')[0],i.split(\"_\")[1]]","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:11:25.720671Z","iopub.execute_input":"2022-10-17T06:11:25.721756Z","iopub.status.idle":"2022-10-17T06:12:24.170152Z","shell.execute_reply.started":"2022-10-17T06:11:25.721723Z","shell.execute_reply":"2022-10-17T06:12:24.169038Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:12:24.171768Z","iopub.execute_input":"2022-10-17T06:12:24.172443Z","iopub.status.idle":"2022-10-17T06:12:24.201920Z","shell.execute_reply.started":"2022-10-17T06:12:24.172400Z","shell.execute_reply":"2022-10-17T06:12:24.200875Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from datasets import Dataset,DatasetDict","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:12:24.203586Z","iopub.execute_input":"2022-10-17T06:12:24.203953Z","iopub.status.idle":"2022-10-17T06:12:24.209508Z","shell.execute_reply.started":"2022-10-17T06:12:24.203917Z","shell.execute_reply":"2022-10-17T06:12:24.208524Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(data[['raw_data','duration']],data['digit'], test_size=0.2, random_state=45,stratify=data['digit'])","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:12:24.210873Z","iopub.execute_input":"2022-10-17T06:12:24.211304Z","iopub.status.idle":"2022-10-17T06:12:24.226875Z","shell.execute_reply.started":"2022-10-17T06:12:24.211269Z","shell.execute_reply":"2022-10-17T06:12:24.225869Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_train[\"digit\"]=y_train\nX_test[\"digit\"]=y_test","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:12:24.228164Z","iopub.execute_input":"2022-10-17T06:12:24.228827Z","iopub.status.idle":"2022-10-17T06:12:24.235056Z","shell.execute_reply.started":"2022-10-17T06:12:24.228787Z","shell.execute_reply":"2022-10-17T06:12:24.234054Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"datasets_train_test = DatasetDict({\n    \"train\": Dataset.from_pandas(X_train),\n    \"test\": Dataset.from_pandas(X_test)\n    })","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:12:24.236565Z","iopub.execute_input":"2022-10-17T06:12:24.237445Z","iopub.status.idle":"2022-10-17T06:12:24.827135Z","shell.execute_reply.started":"2022-10-17T06:12:24.237409Z","shell.execute_reply":"2022-10-17T06:12:24.826070Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import random\nimport pandas as pd\nfrom IPython.display import display, HTML\n\ndef show_random_elements(dataset, num_examples=10):\n    assert num_examples <= len(dataset), \"Can't pick more elements than there are in the dataset.\"\n    picks = []\n    for _ in range(num_examples):\n        pick = random.randint(0, len(dataset)-1)\n        while pick in picks:\n            pick = random.randint(0, len(dataset)-1)\n        picks.append(pick)\n    \n    df = pd.DataFrame(dataset[picks])\n    display(HTML(df.to_html()))\n\nshow_random_elements(datasets_train_test[\"train\"].remove_columns(['raw_data', 'duration',\"__index_level_0__\"]))","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:12:24.831457Z","iopub.execute_input":"2022-10-17T06:12:24.831751Z","iopub.status.idle":"2022-10-17T06:12:24.846420Z","shell.execute_reply.started":"2022-10-17T06:12:24.831723Z","shell.execute_reply":"2022-10-17T06:12:24.845077Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"vocab_dict = {i:i for i in range(10)}","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:09:04.740771Z","iopub.execute_input":"2022-10-17T07:09:04.741172Z","iopub.status.idle":"2022-10-17T07:09:04.748204Z","shell.execute_reply.started":"2022-10-17T07:09:04.741130Z","shell.execute_reply":"2022-10-17T07:09:04.746986Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"vocab_dict[\"|\"] = 10\nvocab_dict[\"[UNK]\"] = len(vocab_dict)\nvocab_dict[\"[PAD]\"] = len(vocab_dict)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:11:46.217489Z","iopub.execute_input":"2022-10-17T07:11:46.217874Z","iopub.status.idle":"2022-10-17T07:11:46.225904Z","shell.execute_reply.started":"2022-10-17T07:11:46.217831Z","shell.execute_reply":"2022-10-17T07:11:46.224684Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"vocab_dict","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:11:46.561376Z","iopub.execute_input":"2022-10-17T07:11:46.562116Z","iopub.status.idle":"2022-10-17T07:11:46.572441Z","shell.execute_reply.started":"2022-10-17T07:11:46.562070Z","shell.execute_reply":"2022-10-17T07:11:46.571466Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(len(vocab_dict))","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:11:47.202931Z","iopub.execute_input":"2022-10-17T07:11:47.203381Z","iopub.status.idle":"2022-10-17T07:11:47.210694Z","shell.execute_reply.started":"2022-10-17T07:11:47.203346Z","shell.execute_reply":"2022-10-17T07:11:47.209609Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import json\nwith open('vocab.json', 'w') as vocab_file:\n    json.dump(vocab_dict, vocab_file)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:11:47.463426Z","iopub.execute_input":"2022-10-17T07:11:47.463743Z","iopub.status.idle":"2022-10-17T07:11:47.471271Z","shell.execute_reply.started":"2022-10-17T07:11:47.463717Z","shell.execute_reply":"2022-10-17T07:11:47.470100Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rand_int = random.randint(0, len(datasets_train_test[\"train\"]))\n\nprint(\"Target text:\", datasets_train_test[\"train\"][rand_int][\"digit\"])\nprint(\"Input array shape:\", np.asarray(datasets_train_test[\"train\"][rand_int][\"raw_data\"]).shape)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:11:47.746842Z","iopub.execute_input":"2022-10-17T07:11:47.747198Z","iopub.status.idle":"2022-10-17T07:11:47.760620Z","shell.execute_reply.started":"2022-10-17T07:11:47.747168Z","shell.execute_reply":"2022-10-17T07:11:47.759200Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from transformers import Wav2Vec2CTCTokenizer\n\ntokenizer = Wav2Vec2CTCTokenizer('./vocab.json', unk_token=\"[UNK]\", pad_token=\"[PAD]\", word_delimiter_token=\"|\")","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:11:48.120418Z","iopub.execute_input":"2022-10-17T07:11:48.120723Z","iopub.status.idle":"2022-10-17T07:11:48.128361Z","shell.execute_reply.started":"2022-10-17T07:11:48.120694Z","shell.execute_reply":"2022-10-17T07:11:48.127326Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from transformers import Wav2Vec2FeatureExtractor\n\nfeature_extractor = Wav2Vec2FeatureExtractor(feature_size=1, sampling_rate=8000, padding_value=0.0, do_normalize=True, return_attention_mask=False)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:11:48.842271Z","iopub.execute_input":"2022-10-17T07:11:48.842670Z","iopub.status.idle":"2022-10-17T07:11:48.849779Z","shell.execute_reply.started":"2022-10-17T07:11:48.842639Z","shell.execute_reply":"2022-10-17T07:11:48.848179Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from transformers import Wav2Vec2Processor\n\nprocessor = Wav2Vec2Processor(feature_extractor=feature_extractor, tokenizer=tokenizer)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:11:50.503016Z","iopub.execute_input":"2022-10-17T07:11:50.503718Z","iopub.status.idle":"2022-10-17T07:11:50.510670Z","shell.execute_reply.started":"2022-10-17T07:11:50.503680Z","shell.execute_reply":"2022-10-17T07:11:50.509535Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import torch\n\nfrom dataclasses import dataclass, field\nfrom typing import Any, Dict, List, Optional, Union\n\n@dataclass\nclass DataCollatorCTCWithPadding:\n    processor: Wav2Vec2Processor\n    padding: Union[bool, str] = True\n    max_length: Optional[int] = 50335.0\n    max_length_labels: Optional[int] = None\n    pad_to_multiple_of: Optional[int] = None\n    pad_to_multiple_of_labels: Optional[int] = None\n\n    def __call__(self, features: List[Dict[str, Union[List[int], torch.Tensor]]]) -> Dict[str, torch.Tensor]:\n        # split inputs and labels since they have to be of different lenghts and need\n        # different padding methods\n        input_features = [{\"input_values\": feature[\"input_values\"]} for feature in features]\n        label_features = [{\"input_ids\": feature[\"labels\"]} for feature in features]\n\n        batch = self.processor.pad(\n            input_features,\n            padding=self.padding,\n            max_length=self.max_length,\n            pad_to_multiple_of=self.pad_to_multiple_of,\n            return_tensors=\"pt\",\n        )\n        with self.processor.as_target_processor():\n            labels_batch = self.processor.pad(\n                label_features,\n                padding=self.padding,\n                max_length=self.max_length_labels,\n                pad_to_multiple_of=self.pad_to_multiple_of_labels,\n                return_tensors=\"pt\",\n            )\n\n        # replace padding with -100 to ignore loss correctly\n        labels = labels_batch[\"input_ids\"].masked_fill(labels_batch.attention_mask.ne(1), -100)\n\n        batch[\"labels\"] = labels\n\n        return batch","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:00.597267Z","iopub.execute_input":"2022-10-17T07:12:00.597710Z","iopub.status.idle":"2022-10-17T07:12:00.613746Z","shell.execute_reply.started":"2022-10-17T07:12:00.597674Z","shell.execute_reply":"2022-10-17T07:12:00.612790Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data_collator = DataCollatorCTCWithPadding(processor=processor, padding=True)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:00.945842Z","iopub.execute_input":"2022-10-17T07:12:00.946173Z","iopub.status.idle":"2022-10-17T07:12:00.955447Z","shell.execute_reply.started":"2022-10-17T07:12:00.946142Z","shell.execute_reply":"2022-10-17T07:12:00.954527Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import IPython.display as ipd\nimport numpy as np\nimport random\n\nrand_int = random.randint(0, len(datasets_train_test[\"train\"]))\n\nprint(datasets_train_test[\"train\"][rand_int][\"digit\"])\nipd.Audio(data=np.asarray(datasets_train_test[\"train\"][rand_int][\"raw_data\"]), autoplay=True, rate=16000)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:01.665753Z","iopub.execute_input":"2022-10-17T07:12:01.666105Z","iopub.status.idle":"2022-10-17T07:12:01.691157Z","shell.execute_reply.started":"2022-10-17T07:12:01.666076Z","shell.execute_reply":"2022-10-17T07:12:01.689832Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rand_int = random.randint(0, len(datasets_train_test[\"train\"]))\n\nprint(\"Target text:\", datasets_train_test[\"train\"][rand_int][\"digit\"])\nprint(\"Input array shape:\", np.asarray(datasets_train_test[\"train\"][rand_int][\"raw_data\"]).shape)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:02.489445Z","iopub.execute_input":"2022-10-17T07:12:02.489804Z","iopub.status.idle":"2022-10-17T07:12:02.510185Z","shell.execute_reply.started":"2022-10-17T07:12:02.489773Z","shell.execute_reply":"2022-10-17T07:12:02.509259Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"datasets_train_test[\"train\"]","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:03.611452Z","iopub.execute_input":"2022-10-17T07:12:03.611840Z","iopub.status.idle":"2022-10-17T07:12:03.621972Z","shell.execute_reply.started":"2022-10-17T07:12:03.611804Z","shell.execute_reply":"2022-10-17T07:12:03.620934Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def prepare_dataset(batch):\n    audio = batch[\"raw_data\"]\n\n    # batched output is \"un-batched\" to ensure mapping is correct\n    batch[\"input_values\"] = processor(audio, sampling_rate=8000).input_values[0]\n    \n    with processor.as_target_processor():\n        batch[\"labels\"] = processor(batch[\"digit\"]).input_ids\n    return batch\n\ntemp_data = datasets_train_test.map(prepare_dataset, remove_columns=datasets_train_test.column_names[\"train\"], num_proc=4)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:05.156746Z","iopub.execute_input":"2022-10-17T07:12:05.157131Z","iopub.status.idle":"2022-10-17T07:12:27.991188Z","shell.execute_reply.started":"2022-10-17T07:12:05.157083Z","shell.execute_reply":"2022-10-17T07:12:27.990107Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from transformers import Wav2Vec2ForCTC\n\nmodel = Wav2Vec2ForCTC.from_pretrained(\n    \"facebook/wav2vec2-base\", \n    ctc_loss_reduction=\"mean\", \n    pad_token_id=processor.tokenizer.pad_token_id,\n)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:28.000442Z","iopub.execute_input":"2022-10-17T07:12:28.001196Z","iopub.status.idle":"2022-10-17T07:12:29.940945Z","shell.execute_reply.started":"2022-10-17T07:12:28.001151Z","shell.execute_reply":"2022-10-17T07:12:29.939912Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.freeze_feature_extractor()","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:29.947912Z","iopub.execute_input":"2022-10-17T07:12:29.948285Z","iopub.status.idle":"2022-10-17T07:12:29.956944Z","shell.execute_reply.started":"2022-10-17T07:12:29.948225Z","shell.execute_reply":"2022-10-17T07:12:29.955679Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from transformers import TrainingArguments\n\ntraining_args = TrainingArguments(\n  group_by_length=True,\n  per_device_train_batch_size=32,\n  evaluation_strategy=\"steps\",\n  num_train_epochs=30,\n  fp16=True,\n  gradient_checkpointing=True, \n  save_steps=500,\n  eval_steps=500,\n  logging_steps=500,\n  learning_rate=1e-4,\n  weight_decay=0.005,\n  warmup_steps=1000,\n  save_total_limit=2,\n  push_to_hub=False,\noutput_dir=\"./\"\n)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:12:29.960219Z","iopub.execute_input":"2022-10-17T07:12:29.964780Z","iopub.status.idle":"2022-10-17T07:12:29.982527Z","shell.execute_reply.started":"2022-10-17T07:12:29.964738Z","shell.execute_reply":"2022-10-17T07:12:29.981525Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from transformers import Trainer\n\ntrainer = Trainer(\n    model=model,\n    data_collator=data_collator,\n    args=training_args,\n    train_dataset=temp_data[\"train\"],\n    eval_dataset=temp_data[\"test\"],\n    tokenizer=processor.feature_extractor,\n)","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:17:31.100905Z","iopub.execute_input":"2022-10-17T07:17:31.101628Z","iopub.status.idle":"2022-10-17T07:17:31.124025Z","shell.execute_reply.started":"2022-10-17T07:17:31.101590Z","shell.execute_reply":"2022-10-17T07:17:31.123076Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"trainer.train()","metadata":{"execution":{"iopub.status.busy":"2022-10-17T07:17:31.448969Z","iopub.execute_input":"2022-10-17T07:17:31.449282Z","iopub.status.idle":"2022-10-17T07:31:07.295901Z","shell.execute_reply.started":"2022-10-17T07:17:31.449256Z","shell.execute_reply":"2022-10-17T07:31:07.295019Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"trainer.save_pretrained(\"./\")","metadata":{"execution":{"iopub.status.busy":"2022-10-17T06:13:07.404445Z","iopub.status.idle":"2022-10-17T06:13:07.404920Z","shell.execute_reply.started":"2022-10-17T06:13:07.404678Z","shell.execute_reply":"2022-10-17T06:13:07.404700Z"},"trusted":true},"execution_count":null,"outputs":[]}]}